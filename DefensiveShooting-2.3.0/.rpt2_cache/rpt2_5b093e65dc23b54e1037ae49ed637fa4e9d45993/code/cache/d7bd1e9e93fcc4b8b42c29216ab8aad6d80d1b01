{
  "code": "import { lwg, EventAdmin, Click } from \"../Lwg_Template/lwg\";\r\nimport UIMain_Enemy from \"./UIMain_Enemy\";\r\nimport UIMain_Bullet from \"./UIMain_Bullet\";\r\nimport { GEnum, GVariate } from \"../Lwg_Template/Global\";\r\nexport default class UIMain extends lwg.Admin.Scene {\r\n    selfNode() {\r\n    }\r\n    lwgOnEnable() {\r\n        this.bulletNum = 0;\r\n        this.self['GuideLine'].alpha = 0;\r\n        this.touchColor = null;\r\n        lwg.Admin._gameStart = true;\r\n        GVariate._currentBlood = GVariate._sumBlood;\r\n        this.addBlood(0);\r\n        EventAdmin.EventClass.reg(EventAdmin.EventType.gameOver, this, () => {\r\n            this.GameOver();\r\n        });\r\n        EventAdmin.EventClass.reg(GEnum.EventType.createEnemy, this, () => {\r\n            this.createEnemy();\r\n        });\r\n        EventAdmin.EventClass.reg(GEnum.EventType.createBullet, this, (whoFired, color, buff, x, y, movePoint, speed) => {\r\n            this.createBullet(whoFired, color, buff, x, y, movePoint, speed);\r\n        });\r\n        Laya.timer.frameLoop(60, this, f => {\r\n            if (!lwg.Admin._gameStart) {\r\n                return;\r\n            }\r\n            EventAdmin.EventClass.notify(GEnum.EventType.createEnemy);\r\n        });\r\n    }\r\n    GameOver() {\r\n        lwg.Admin._gameStart = false;\r\n        this.btnOffClick();\r\n    }\r\n    addBlood(number) {\r\n        GVariate._currentBlood += number;\r\n        if (GVariate._currentBlood <= 0) {\r\n            EventAdmin.EventClass.notify(EventAdmin.EventType.gameOver);\r\n        }\r\n        let numStr = GVariate._currentBlood + '/' + GVariate._sumBlood;\r\n        let Num = this.self['Blood'].getChildByName('Num');\r\n        Num.text = numStr;\r\n    }\r\n    createEnemy() {\r\n        let enemy;\r\n        enemy = Laya.Pool.getItemByCreateFun('enemy', this.Enemy.create, this.Enemy);\r\n        this.self['EnemyParent'].addChild(enemy);\r\n        let randX = enemy.width / 2 + (Laya.stage.width - enemy.width / 2 * 2) * Math.random();\r\n        enemy.addComponent(UIMain_Enemy);\r\n        enemy.pos(randX, 0);\r\n        enemy.zOrder = 0;\r\n        return enemy;\r\n    }\r\n    createBullet(whoFired, color, buff, x, y, movePoint, speed) {\r\n        let bullet;\r\n        bullet = Laya.Pool.getItemByCreateFun('bullet', this.Bullet.create, this.Bullet);\r\n        this.self['BulletParent'].addChild(bullet);\r\n        bullet.pos(x, y);\r\n        bullet.zOrder = 0;\r\n        let script = bullet.addComponent(UIMain_Bullet);\r\n        script.whoFired = whoFired;\r\n        script.movePoint = movePoint;\r\n        script.speed = speed;\r\n        bullet.rotation = lwg.Tools.vector_Angle(movePoint.x, movePoint.y);\r\n        let pic = bullet.getChildByName('Pic');\r\n        switch (color) {\r\n            case GEnum.bulletColor.yellow:\r\n                pic.skin = GEnum.bulletSkin.yellow;\r\n                script.bulletColor = GEnum.bulletColor.yellow;\r\n                break;\r\n            case GEnum.bulletColor.bule:\r\n                pic.skin = GEnum.bulletSkin.bule;\r\n                script.bulletColor = GEnum.bulletColor.bule;\r\n                break;\r\n            case GEnum.bulletColor.green:\r\n                pic.skin = GEnum.bulletSkin.green;\r\n                script.bulletColor = GEnum.bulletColor.green;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        GVariate._bulletNum++;\r\n        return bullet;\r\n    }\r\n    btnOnClick() {\r\n        lwg.Click.on(Click.ClickType.noEffect, null, this.self['BtnYellow'], this, this.clickDwon, null, null, null);\r\n        lwg.Click.on(Click.ClickType.noEffect, null, this.self['BtnBlue'], this, this.clickDwon, null, null, null);\r\n        lwg.Click.on(Click.ClickType.noEffect, null, this.self['BtnGreen'], this, this.clickDwon, null, null, null);\r\n    }\r\n    btnOffClick() {\r\n        lwg.Click.off(Click.ClickType.noEffect, this.self['BtnYellow'], this, this.clickDwon, null, null, null);\r\n        lwg.Click.off(Click.ClickType.noEffect, this.self['BtnBlue'], this, this.clickDwon, null, null, null);\r\n        lwg.Click.off(Click.ClickType.noEffect, this.self['BtnGreen'], this, this.clickDwon, null, null, null);\r\n    }\r\n    clickDwon(e) {\r\n        this.touchColor = e.currentTarget;\r\n        switch (this.touchColor.name) {\r\n            case 'BtnYellow':\r\n                this.launchColor = GEnum.bulletColor.yellow;\r\n                this.self['BtnYellow'].scale(1.1, 1.1);\r\n                this.self['BtnBlue'].scale(1, 1);\r\n                this.self['BtnGreen'].scale(1, 1);\r\n                this.self['GuideLine'].x = this.self['BtnYellow'].x;\r\n                this.self['GuideLine'].y = this.self['BtnYellow'].y;\r\n                this.self['GuideLine'].alpha = 1;\r\n                break;\r\n            case 'BtnBlue':\r\n                this.launchColor = GEnum.bulletColor.bule;\r\n                this.self['BtnYellow'].scale(1, 1);\r\n                this.self['BtnBlue'].scale(1.1, 1.1);\r\n                this.self['BtnGreen'].scale(1, 1);\r\n                this.self['GuideLine'].x = this.self['BtnBlue'].x;\r\n                this.self['GuideLine'].y = this.self['BtnBlue'].y;\r\n                this.self['GuideLine'].alpha = 1;\r\n                break;\r\n            case 'BtnGreen':\r\n                this.launchColor = GEnum.bulletColor.green;\r\n                this.self['BtnYellow'].scale(1, 1);\r\n                this.self['BtnBlue'].scale(1, 1);\r\n                this.self['BtnGreen'].scale(1.1, 1.1);\r\n                this.self['GuideLine'].x = this.self['BtnGreen'].x;\r\n                this.self['GuideLine'].y = this.self['BtnGreen'].y;\r\n                this.self['GuideLine'].alpha = 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    onStageMouseMove(e) {\r\n        if (this.touchColor !== null) {\r\n            let x = e.stageX;\r\n            let y = e.stageY;\r\n            let point = new Laya.Point(x, y);\r\n            let len = point.distance(this.touchColor.x, this.touchColor.y);\r\n            let line = this.self['GuideLine'].getChildByName('Line');\r\n            line.height = len;\r\n            let movePoint = new Laya.Point(x - this.touchColor.x, y - this.touchColor.y);\r\n            this.self['GuideLine'].rotation = lwg.Tools.vector_Angle(movePoint.x, movePoint.y);\r\n            this.touchColor.rotation = this.self['GuideLine'].rotation;\r\n            this.self[this.touchColor.name];\r\n        }\r\n    }\r\n    onStageMouseUp(e) {\r\n        let x = e.stageX;\r\n        let y = e.stageY;\r\n        let point = new Laya.Point(x, y);\r\n        if (this.touchColor !== null) {\r\n            let distance = point.distance(this.touchColor.x, this.touchColor.y);\r\n            if (distance > 100) {\r\n                let movePoint = new Laya.Point(x - this.touchColor.x, y - this.touchColor.y);\r\n                movePoint.normalize();\r\n                EventAdmin.EventClass.notify(GEnum.EventType.createBullet, [GEnum.BulletWhoFired.protagonist, this.launchColor, null, this.touchColor.x, this.touchColor.y, movePoint, 80]);\r\n            }\r\n        }\r\n        this.self['GuideLine'].alpha = 0;\r\n        this.touchColor = null;\r\n    }\r\n    lwgOnUpdate() {\r\n    }\r\n}\r\n",
  "references": [
    "F:/Work/Game/05_DefensiveShooting_2.3.0/project/DefensiveShooting-2.3.0/src/script/Lwg_Template/lwg.ts",
    "F:/Work/Game/05_DefensiveShooting_2.3.0/project/DefensiveShooting-2.3.0/src/TJ/RecordManager.ts",
    "F:/Work/Game/05_DefensiveShooting_2.3.0/project/DefensiveShooting-2.3.0/src/TJ/Admanager.ts",
    "F:/Work/Game/05_DefensiveShooting_2.3.0/project/DefensiveShooting-2.3.0/src/script/Game/UIMain_Enemy.ts",
    "F:/Work/Game/05_DefensiveShooting_2.3.0/project/DefensiveShooting-2.3.0/src/script/Game/UIMain_Bullet.ts",
    "F:/Work/Game/05_DefensiveShooting_2.3.0/project/DefensiveShooting-2.3.0/src/script/Lwg_Template/Global.ts"
  ]
}
